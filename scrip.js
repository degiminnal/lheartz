class Application {
    constructor() {
      this.canvas = null;
      this.ctx = null;
      this.w = 0;
      this.h = 0;
      this.speed = 5;
      this.lineData = [];
      this.maxHeight = 50;
      this.active = 1;
      this.heartData = [];
      this.heartR = 12;
      this.dt = 0;
      this.x = 200;
      this.y = 0;
      this.startX = 0;
      this.startY = 0;
      this.lineColor = "rgba(218,40,0,1)";
      this.ldmColor = "rgba(0,40,218,1)";
      this.shadowColor = "rgba(255,255,255,.5)";
      this.centerY = 0;
      this.init();
    }
    init() {
      this.canvas = document.getElementById("canvas");
      this.ctx = this.canvas.getContext("2d");  // 获取一个画布，赋值给 this.ctx
      window.addEventListener("resize", this.reset.bind(this));
      this.ldm = [[15,-28],[15,-28],[15,-28],[15,-28],[15,-28],[15,-28],[15,-28],[15,-28],[15,-28],[-13,34],[-13,34],[-13,34],[-13,34],[-7,34],[-7,34],[-7,34],[-1,30],[-1,30],[-1,30],[-1,30],[1,39],[1,39],[1,39],[12,-36],[12,-36],[12,-36],[9,-31],[9,-31],[9,-31],[9,-31],[25,-25],[25,-25],[49,-30],[-22,22],[-22,22],[-22,22],[0,33],[0,33],[45,10],[13,-39],[13,-39],[9,-34],[9,-34],[9,-34],[9,-34],[9,-34],[9,-34],[-12,31],[-12,31],[-12,31],[-1,30],[-1,30],[-1,30],[-1,30],[0,36],[0,36],[9,-30],[9,-30],[9,-30],[27,-16],[1,46],[-7,42],[-7,42],[-3,34],[-3,34],[6,-31],[6,-31],[9,-43],[6,-30],[6,-30],[16,-27],[16,-27],[24,-21],[24,-21],[4,33],[4,33],[-9,43],[-9,43],[-3,31],[-3,31],[-3,31],[4,-36],[4,-36],[4,-36],[12,-31],[12,-31],[12,-31],[12,-31],[12,-31],[3,37],[3,37],[3,37],[-1,36],[-1,36],[-1,36],[16,-33],[16,-33],[16,-33]];
      this.zyy = [[33,-34],[31,-21],[31,-21],[31,-21],[33,-9],[33,-9],[-22,28],[-22,28],[-22,28],[-16,28],[-16,28],[-16,28],[-16,28],[43,0],[22,-19],[22,-19],[22,-19],[22,-19],[22,-19],[12,-30],[25,-19],[25,-19],[25,-19],[-7,37],[-7,37],[6,54],[24,-31],[24,-31],[12,-28],[12,-28],[12,-28],[-3,36],[-3,36],[-3,36],[-3,36],[-10,49],[-16,33],[-16,33],[19,-25],[19,-25],[19,-25],[19,-25],[25,-43],[27,-16],[13,-27],[27,-21],[27,-21],[27,-21],[-6,33],[-6,33],[-3,57],[15,-27],[15,-27],[18,-36],[18,-36],[-1,30],[-1,30],[-1,30],[-1,30],[-3,33],[-25,39],[-42,33],[18,-25],[18,-25],[18,-25],[18,-25],[18,-25],[34,-33]];
      this.render();
    }
    reset() {
      this.w = this.canvas.width = this.ctx.width = window.innerWidth;
      this.h = this.canvas.height = this.ctx.height = window.innerHeight;
      this.centerY = this.h / 2 + this.heartR*Math.PI*2;
      this.y = this.centerY;
      this.clear();
    }
    clear(){
      this.heartData.length = this.lineData.length = 0;
      this.active = 1;
      this.x = 0;
      this.getHeart();
      this.ldm_1 = [[15,-28],[15,-28],[15,-28],[15,-28],[15,-28],[15,-28],[15,-28],[15,-28],[15,-28],[-13,34],[-13,34],[-13,34],[-13,34],[-7,34],[-7,34],[-7,34],[-1,30],[-1,30],[-1,30],[-1,30],[1,39],[1,39],[1,39],[12,-36],[12,-36],[12,-36],[9,-31],[9,-31],[9,-31],[9,-31],[25,-25],[25,-25],[49,-30],[-22,22],[-22,22],[-22,22],[0,33],[0,33],[45,10],[13,-39],[13,-39],[9,-34],[9,-34],[9,-34],[9,-34],[9,-34],[9,-34],[-12,31],[-12,31],[-12,31],[-1,30],[-1,30],[-1,30],[-1,30],[0,36],[0,36],[9,-30],[9,-30],[9,-30],[27,-16],[1,46],[-7,42],[-7,42],[-3,34],[-3,34],[6,-31],[6,-31],[9,-43],[6,-30],[6,-30],[16,-27],[16,-27],[24,-21],[24,-21],[4,33],[4,33],[-9,43],[-9,43],[-3,31],[-3,31],[-3,31],[4,-36],[4,-36],[4,-36],[12,-31],[12,-31],[12,-31],[12,-31],[12,-31],[3,37],[3,37],[3,37],[-1,36],[-1,36],[-1,36],[16,-33],[16,-33],[16,-33]];
      this.ldm = [[12,-22],[10,-19],[10,-19],[9,-16],[9,-16],[9,-15],[7,-15],[7,-13],[7,-13],[7,-15],[9,-15],[9,-15],[6,-12],[6,-10],[6,-10],[4,-9],[6,-12],[-1,6],[-10,21],[-4,10],[-4,12],[-6,13],[-6,15],[-4,12],[-3,9],[-3,10],[-3,9],[-1,10],[-3,9],[-3,13],[-1,15],[-3,18],[-3,15],[-3,19],[-1,15],[-1,18],[-1,25],[-1,33],[-1,33],[-1,48],[-1,72],[4,9],[3,6],[3,4],[4,1],[4,0],[1,-3],[3,-3],[4,-6],[4,-9],[3,-7],[1,-12],[3,-12],[3,-21],[3,-21],[4,-22],[4,-19],[4,-18],[7,-24],[4,-15],[6,-21],[6,-18],[9,-7],[9,-10],[7,-9],[9,-10],[10,-12],[24,-18],[24,-12],[16,-7],[13,0],[1,-1],[-21,9],[-19,10],[-22,15],[-15,15],[-6,7],[-4,9],[-3,16],[-3,18],[0,15],[1,12],[1,9],[1,7],[4,4],[6,3],[9,4],[18,0],[10,-3],[6,-9],[3,-10],[4,-12],[3,-13],[1,-16],[1,-12],[3,-13],[3,-16],[3,-12],[1,-12],[3,-12],[4,-18],[4,-15],[3,-15],[4,-15],[9,-25],[9,-22],[9,-21],[15,-22],[-16,34],[-9,22],[-7,24],[-6,19],[-3,15],[-3,15],[-3,18],[-3,15],[-1,36],[-1,12],[0,34],[1,42],[1,25],[1,-31],[1,-30],[3,-12],[7,-10],[9,-7],[6,-9],[6,-6],[4,-9],[4,-7],[7,-7],[9,-4],[9,-4],[10,-1],[7,1],[3,9],[1,10],[0,12],[-1,19],[-3,51],[-3,27],[-3,22],[-3,19],[-4,18],[-3,16],[-7,16],[0,-13],[3,-21],[1,-13],[3,-15],[3,-15],[3,-15],[3,-15],[7,-24],[3,-16],[6,-18],[6,-15],[7,-12],[6,-13],[9,-15],[7,-12],[7,-9],[6,-9],[7,-9],[10,-10],[15,-9],[12,-7],[4,0],[1,25],[1,36],[-1,30],[-1,16],[-3,27],[-1,18],[-3,19],[-1,16],[-1,10],[-1,9],[-1,7],[-1,7],[-1,7],[-1,7],[-1,6],[-4,12],[-7,18],[4,-10],[1,-13],[1,-21],[1,-15],[1,-16],[1,-18],[1,-10],[3,-19],[3,-19],[3,-18],[3,-13],[4,-12],[3,-13],[9,-16],[4,-9],[3,-7],[4,-6],[6,-9],[6,-7],[9,-10],[9,-9],[7,-4],[4,-4],[6,0],[1,4],[1,64],[-1,46],[-1,36],[-1,25],[-1,21],[-3,24],[-1,9],[9,0],[4,-6],[1,-10],[4,-10],[4,-10],[4,-9],[4,-9],[3,-6],[3,-6],[4,-10],[4,-9],[7,-15]];
      this.zyy1 = [[33,-34],[31,-21],[31,-21],[31,-21],[33,-9],[33,-9],[-22,28],[-22,28],[-22,28],[-16,28],[-16,28],[-16,28],[-16,28],[43,0],[22,-19],[22,-19],[22,-19],[22,-19],[22,-19],[12,-30],[25,-19],[25,-19],[25,-19],[-7,37],[-7,37],[6,54],[24,-31],[24,-31],[12,-28],[12,-28],[12,-28],[-3,36],[-3,36],[-3,36],[-3,36],[-10,49],[-16,33],[-16,33],[19,-25],[19,-25],[19,-25],[19,-25],[25,-43],[27,-16],[13,-27],[27,-21],[27,-21],[27,-21],[-6,33],[-6,33],[-3,57],[15,-27],[15,-27],[18,-36],[18,-36],[-1,30],[-1,30],[-1,30],[-1,30],[-3,33],[-25,39],[-42,33],[18,-25],[18,-25],[18,-25],[18,-25],[18,-25],[34,-33]];
      this.zyy = [[10,-13],[13,-12],[12,-10],[15,-12],[13,-10],[15,-10],[19,-12],[18,-9],[16,-7],[18,-6],[13,-4],[13,-3],[7,-1],[7,-1],[1,4],[1,3],[-1,3],[-3,6],[-7,6],[-9,9],[-9,9],[-10,12],[-10,13],[-9,10],[-9,10],[-7,12],[-9,12],[-9,15],[-7,13],[-7,13],[-6,12],[-7,18],[-1,15],[-1,12],[4,3],[6,-1],[12,0],[4,-1],[6,-1],[4,-1],[7,-3],[6,-3],[4,-3],[10,-7],[10,-9],[12,-10],[12,-12],[12,-10],[12,-10],[12,-10],[7,-6],[9,-7],[6,-12],[6,-16],[9,-9],[9,-7],[7,-7],[10,-7],[10,-7],[12,-9],[7,-6],[7,-4],[3,-3],[1,1],[1,-4],[1,1],[4,-1],[1,1],[1,3],[1,1],[-1,6],[-1,9],[-1,6],[-3,7],[-3,10],[-3,12],[-3,10],[-3,15],[-1,15],[-1,30],[1,4],[4,1],[4,0],[4,-4],[4,-4],[7,-9],[6,-9],[7,-12],[1,1],[6,-13],[1,1],[6,-16],[4,-13],[6,-13],[6,-13],[6,-13],[1,1],[4,-13],[1,1],[3,-10],[1,1],[1,-9],[1,3],[3,-4],[4,3],[-1,7],[-1,-1],[0,10],[-1,-1],[-1,18],[-3,19],[-1,12],[-1,12],[-1,16],[-1,16],[-1,18],[-1,15],[-1,21],[-1,16],[-1,16],[-1,-1],[-4,12],[-4,15],[-7,9],[-6,10],[-6,7],[-7,6],[-6,4],[-9,7],[-7,4],[-4,1],[-7,-3],[1,-4],[6,-3],[6,-4],[7,-3],[6,-3],[7,-6],[7,-6],[1,1],[4,-6],[1,1],[4,-10],[4,-9],[6,-4],[4,-12],[4,-12],[1,1],[6,-15],[4,-12],[1,1],[4,-13],[1,1],[4,-10],[6,-10],[4,-9],[10,-10],[10,-4],[10,-4],[3,-9],[3,-6],[4,-7],[4,-7],[7,-9],[7,-7],[7,-6],[7,-6],[7,-6],[6,-4],[7,-4],[7,-4],[9,-4],[7,-4],[1,1],[9,-1],[1,7],[-1,6],[-3,7],[-1,10],[-3,10],[-3,10],[-4,13],[-3,12],[0,9],[-1,-3],[0,40],[4,4],[7,0],[3,-3],[1,3],[3,-7],[1,1],[1,-6],[3,-6],[4,-7],[4,-6],[6,-10],[4,-9],[1,1],[4,-12],[1,1],[4,-12],[1,1],[3,-12],[1,1],[4,-13],[4,-13],[1,1],[3,-10],[1,1],[1,-10],[1,1],[4,-12],[1,1],[3,-9],[1,1],[1,-6],[1,-4],[1,1],[1,-3],[3,3],[-1,6],[-1,10],[-1,9],[-1,10],[-3,13],[-1,9],[-3,16],[-1,22],[-1,24],[0,34],[-1,-1],[3,10],[-1,-1],[0,27],[-1,-1],[-1,10],[-3,10],[-4,9],[-3,7],[-4,7],[-4,6],[-4,6],[-6,6],[-7,7],[-6,4],[-9,6],[-9,6],[-4,3],[-7,-3],[-1,-4],[6,-6],[7,-6],[9,-6],[9,-4],[7,-4],[4,-6],[7,-9],[1,1],[6,-12],[6,-9],[1,1],[3,-10],[1,1],[3,-9],[9,-19],[4,-10],[1,1],[1,-9],[1,1],[4,-13],[6,-7],[7,-9],[9,-6],[7,-4],[6,-4],[10,-4]];
      this.ctx.clearRect(0, 0, this.w, this.h);
    }
    render() {
      // console.log("in render");
      this.reset();
      this.step();
    }
    getHeart() {
      let t = Math.PI + 0.5;
      let maxt = 2 * Math.PI - 1;
      let vt = this.speed/100;
      let x = 0;
      let y = 0;
      let r = this.heartR;
      for (let i = 0; i < Math.ceil(maxt / vt); i++) {
        x = 16 * Math.pow(Math.sin(t), 3);
        y = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t);
        t += vt;
        x *= r;
        y = -y * r - r * Math.PI * 4;
        if (y < 0) {
          this.heartData.push({ x, y });
        }
      }
    
      // console.log(this.heartData);
    }
    drawTopLine() {
      // console.log("drawTopLine",this.x,this.y,this.centerY);
      const { ctx, w, h, x, y, shadowColor, maxHeight, lineData, speed, active,centerY } = this;
      lineData.unshift({ x, y })
      let x1 = x + Math.random() * speed + speed;
      let y1 = centerY;
      // active = 0  jump status
      // active = 1  mid line status
      // active = 2  heart status
      
      if (this.ldm.length>0) {
        let _pos = this.ldm.shift();
        x1 = x + _pos[0];
        y1 = y + _pos[1];
      }
      else if(this.zyy.length && x1 > w * 0.65){
        let _pos = this.zyy.shift();
        x1 = x + _pos[0];
        y1 = y + _pos[1];
      }
      else if (x1 > w * 0.05 && x1 < w * 0.95) {
        // the probability for jump is 0.2
        if (Math.random() > 0.65 && active == 0) {
          y1 += Math.random() * maxHeight * 2 - maxHeight
        }
        if (x1 > 0.3 * w && x1 < 0.38 * w && this.active==1){
          this.active = 0;
        }
        // the x reached 0.25*w, stop jump and draw line
        if (x1 > w * 0.38 && this.active == 0) {
          this.active = 1;
        }
        if (x1 > w * 0.45 && this.active == 1) {
          this.active = 2;
          this.startX = x1 + speed * 5;
          this.startY = centerY;
        }
        if (this.heartData.length > 0 && this.active == 2) {
          let _pos = this.heartData.shift();
          x1 = this.startX + _pos.x;
          y1 = this.startY + _pos.y;
          if (y1 > this.startY) {
            y1 = this.startY;
          }
        }
        if (x1 > 0.55 * w && this.heartData.length == 0 && this.active == 2) {
          this.active = 0;
        }
        if (x1 > 0.63 * w && this.heartData.length == 0 && this.active ==0) {
          this.active = 1;
        }
        // console.log(this.active);
      }
      ctx.lineWidth = 10;
      ctx.strokeStyle = "rgba(255,255,255,.5)";
      ctx.lineJoin = "round";
      ctx.lineCap = "round";
      ctx.shadowBlur = 20;
      ctx.shadowColor = shadowColor;
      ctx.beginPath();
      ctx.moveTo(x, y);
      ctx.lineTo(x1, y1);
      ctx.stroke();
      ctx.closePath();
      this.x = x1;
      this.y = y1;
    }
    drawLine() {
      // console.log("in drawLine");
      const { ctx,shadowColor, ldmColor, lineColor, maxHeight, lineData } = this;
      if (lineData.length < 2) return;
      ctx.lineWidth = 10;
      ctx.strokeStyle = lineColor;
      ctx.lineJoin = "round";
      ctx.lineCap = "round";
      ctx.shadowBlur = 20;
      ctx.shadowColor = shadowColor;
      ctx.beginPath();
      ctx.moveTo(lineData[1].x, lineData[1].y);
      ctx.lineTo(lineData[0].x, lineData[0].y);
      ctx.stroke();
      ctx.closePath();
    }
    step() {
      // console.log("in step()");
      requestAnimationFrame(this.step.bind(this));
      if (this.dt % 1 == 0) {
        this.drawLine();
        this.drawTopLine();
      }
      if (this.x > this.w + this.speed) {
        this.clear()
      }
      this.dt+=1
    }
  }
  
  window.onload = new Application();